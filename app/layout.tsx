import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";

// An import here results in the no "window" error. This is because the
// import is executed on the server side, and the "window" object is not
// available there. (screenshot: screenshots/no_window_error.png)

// import { CoralogixRum } from "@coralogix/browser";
// import type { CoralogixDomain } from "@coralogix/browser/src/types";
//
// CoralogixRum.init({
//   public_key: process.env.CORALOGIX_TOKEN as string,
//   application: process.env.CORALOGIX_APP_NAME as string,
//   version: (process.env.CORALOGIX_APP_VERSION as string) || "0.0.0",
//   coralogixDomain: process.env.CORALOGIX_URL as CoralogixDomain,
// });

// So instead we'll use a client side component to load RUM.
import { Coralogix } from "./coralogix";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <body className={inter.className}>
        <Coralogix />
        {children}
      </body>
    </html>
  );
}
